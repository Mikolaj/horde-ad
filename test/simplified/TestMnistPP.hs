{-# LANGUAGE OverloadedLists #-}
-- | Tests of MNIST nns that pretty-print resulting gradient and primal terms.
module TestMnistPP
  ( testTrees
  ) where

import Prelude

import Data.IntMap.Strict qualified as IM
import GHC.Exts (IsList (..))
import Test.Tasty
import Test.Tasty.HUnit hiding (assert)

import Data.Array.Nested (ShR (..))
import Data.Array.Nested qualified as Nested

import HordeAd
import HordeAd.Core.Adaptor
import HordeAd.Core.AstFreshId
import HordeAd.Core.Ops (treplicate)

import MnistData
import MnistFcnnRanked1 qualified
import MnistFcnnRanked2 (XParams2)
import MnistFcnnRanked2 qualified
import MnistRnnRanked2 (ADRnnMnistParameters)
import MnistRnnRanked2 qualified

testTrees :: [TestTree]
testTrees = [ tensorMnistPPFCNNR
            , tensorMnistPPRNNR
            ]

-- * FCNNR tests

type XParams widthHidden widthHidden2 r =
  X (MnistFcnnRanked1.ADFcnnMnist1Parameters RepN widthHidden widthHidden2 r)

tensorMnistPPFCNNR :: TestTree
tensorMnistPPFCNNR = testGroup "PP tests for Short Ranked MNIST tests"
  [ testCase "VTO1 PP Lin" testVTOPP
  , testCase "VTO1 PP NonLin" testVTOPPNonLin
  , testCase "VTO2 PP Lin" testVT2OPP
  , testCase "VTO2 PP NonLin" testVT2OPPNonLin
  , testCase "VTO2 PP NonLin2" testVT2OPPNonLin2
  , testCase "VTO2 PP NonLin3" testVT2OPPNonLin3
  ]

valsInitVTOPP :: (Num r, Enum r, Nested.PrimElt r)
              => MnistFcnnRanked1.ADFcnnMnist1Parameters RepN 3 4 r
valsInitVTOPP =
  ( ( fromList (replicate 3 (RepN $ Nested.sfromList1Prim
                                      (SNat @SizeMnistGlyph)
                                      [1 .. fromIntegral sizeMnistGlyphInt]))
    , RepN $ Nested.sfromList1Prim (SNat @3) [1, 2, 3] )
  , ( fromList (replicate 4 (RepN $ Nested.sfromList1Prim
                                      (SNat @3) [1, 2, 3]))
    , RepN $ Nested.sfromList1Prim (SNat @4) [1, 2, 3, 4] )
  , ( fromList (replicate sizeMnistLabelInt (RepN $ Nested.sfromList1Prim
                                                      (SNat @4) [1, 2, 3, 4]))
    , RepN $ Nested.sfromList1Prim (SNat @SizeMnistLabel)
                                   [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] ) )

testVTOPP :: Assertion
testVTOPP = do
  resetVarCounter
  let renames = IM.empty
      blackGlyph = treplicate (SNat @SizeMnistGlyph) knownSTK
                   $ fromPrimal $ rconcrete $ Nested.rscalar 7
      afcnn2T :: MnistFcnnRanked1.ADFcnnMnist1Parameters
                   (AstTensor AstMethodLet FullSpan) 3 4 Float
              -> AstTensor AstMethodLet FullSpan (TKR 1 Float)
      afcnn2T =
        MnistFcnnRanked1.afcnnMnist1 id id
                                     (SNat @3) (SNat @4) (sfromR blackGlyph)
      ftk = tftk @RepN (knownSTK @(XParams 3 4 Float))
                       (toTarget @RepN valsInitVTOPP)
      (artifactRev, _) = revArtifactAdapt True afcnn2T ftk
  printArtifactPretty renames artifactRev
    @?= "\\v6 v1 -> let v4 = sfromVector (fromList [ssum @784 (tproject1 (tproject1 (tproject1 (tproject1 v1))) * sreplicate @784 (sscalar 7.0)), ssum @784 (tproject1 (tproject2 (tproject1 (tproject1 (tproject1 v1)))) * sreplicate @784 (sscalar 7.0)), ssum @784 (tproject1 (tproject2 (tproject2 (tproject1 (tproject1 (tproject1 v1))))) * sreplicate @784 (sscalar 7.0))]) + tproject2 (tproject1 (tproject1 v1)) ; v5 = sfromVector (fromList [ssum @3 (tproject1 (tproject1 (tproject2 (tproject1 v1))) * v4), ssum @3 (tproject1 (tproject2 (tproject1 (tproject2 (tproject1 v1)))) * v4), ssum @3 (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1))))) * v4), ssum @3 (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1)))))) * v4)]) + tproject2 (tproject2 (tproject1 v1)) ; v7 = sreplicate @4 (sfromR v6 !$ [9]) ; v8 = sreplicate @4 (sfromR v6 !$ [8]) ; v9 = sreplicate @4 (sfromR v6 !$ [7]) ; v10 = sreplicate @4 (sfromR v6 !$ [6]) ; v11 = sreplicate @4 (sfromR v6 !$ [5]) ; v12 = sreplicate @4 (sfromR v6 !$ [4]) ; v13 = sreplicate @4 (sfromR v6 !$ [3]) ; v14 = sreplicate @4 (sfromR v6 !$ [2]) ; v15 = sreplicate @4 (sfromR v6 !$ [1]) ; v16 = sreplicate @4 (sfromR v6 !$ [0]) ; v17 = tproject1 (tproject1 (tproject2 v1)) * v16 + (tproject1 (tproject2 (tproject1 (tproject2 v1))) * v15 + (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 v1)))) * v14 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))) * v13 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))) * v12 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))) * v11 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))) * v10 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))) * v9 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))))) * v8 + tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))))) * v7)))))))) ; v18 = sreplicate @3 (v17 !$ [3]) ; v19 = sreplicate @3 (v17 !$ [2]) ; v20 = sreplicate @3 (v17 !$ [1]) ; v21 = sreplicate @3 (v17 !$ [0]) ; v22 = tproject1 (tproject1 (tproject2 (tproject1 v1))) * v21 + (tproject1 (tproject2 (tproject1 (tproject2 (tproject1 v1)))) * v20 + (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1))))) * v19 + tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1)))))) * v18)) in tpair (tpair (tpair (tpair (sreplicate @784 (sscalar 7.0) * sreplicate @784 (v22 !$ [0]), tpair (sreplicate @784 (sscalar 7.0) * sreplicate @784 (v22 !$ [1]), tpair (sreplicate @784 (sscalar 7.0) * sreplicate @784 (v22 !$ [2]), Z0))), v22), tpair (tpair (v4 * v21, tpair (v4 * v20, tpair (v4 * v19, tpair (v4 * v18, Z0)))), v17)), tpair (tpair (v5 * v16, tpair (v5 * v15, tpair (v5 * v14, tpair (v5 * v13, tpair (v5 * v12, tpair (v5 * v11, tpair (v5 * v10, tpair (v5 * v9, tpair (v5 * v8, tpair (v5 * v7, Z0)))))))))), sfromR v6))"
  printArtifactPrimalPretty renames artifactRev
    @?= "\\v1 -> let v4 = sfromVector (fromList [ssum @784 (tproject1 (tproject1 (tproject1 (tproject1 v1))) * sreplicate @784 (sscalar 7.0)), ssum @784 (tproject1 (tproject2 (tproject1 (tproject1 (tproject1 v1)))) * sreplicate @784 (sscalar 7.0)), ssum @784 (tproject1 (tproject2 (tproject2 (tproject1 (tproject1 (tproject1 v1))))) * sreplicate @784 (sscalar 7.0))]) + tproject2 (tproject1 (tproject1 v1)) ; v5 = sfromVector (fromList [ssum @3 (tproject1 (tproject1 (tproject2 (tproject1 v1))) * v4), ssum @3 (tproject1 (tproject2 (tproject1 (tproject2 (tproject1 v1)))) * v4), ssum @3 (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1))))) * v4), ssum @3 (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1)))))) * v4)]) + tproject2 (tproject2 (tproject1 v1)) in rfromS (sfromVector (fromList [ssum @4 (tproject1 (tproject1 (tproject2 v1)) * v5), ssum @4 (tproject1 (tproject2 (tproject1 (tproject2 v1))) * v5), ssum @4 (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 v1)))) * v5), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))) * v5), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))) * v5), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))) * v5), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))) * v5), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))) * v5), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))))) * v5), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))))) * v5)]) + tproject2 (tproject2 v1))"
  printArtifactPretty renames (simplifyArtifact artifactRev)
    @?= "\\v6 v1 -> let v4 = sfromVector (fromList [sdot0 (tproject1 (tproject1 (tproject1 (tproject1 v1)))) (sreplicate @784 (sscalar 7.0)), sdot0 (tproject1 (tproject2 (tproject1 (tproject1 (tproject1 v1))))) (sreplicate @784 (sscalar 7.0)), sdot0 (tproject1 (tproject2 (tproject2 (tproject1 (tproject1 (tproject1 v1)))))) (sreplicate @784 (sscalar 7.0))]) + tproject2 (tproject1 (tproject1 v1)) ; v5 = sfromVector (fromList [sdot0 (tproject1 (tproject1 (tproject2 (tproject1 v1)))) v4, sdot0 (tproject1 (tproject2 (tproject1 (tproject2 (tproject1 v1))))) v4, sdot0 (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1)))))) v4, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1))))))) v4]) + tproject2 (tproject2 (tproject1 v1)) ; v7 = sreplicate @4 (sfromR v6 !$ [9]) ; v8 = sreplicate @4 (sfromR v6 !$ [8]) ; v9 = sreplicate @4 (sfromR v6 !$ [7]) ; v10 = sreplicate @4 (sfromR v6 !$ [6]) ; v11 = sreplicate @4 (sfromR v6 !$ [5]) ; v12 = sreplicate @4 (sfromR v6 !$ [4]) ; v13 = sreplicate @4 (sfromR v6 !$ [3]) ; v14 = sreplicate @4 (sfromR v6 !$ [2]) ; v15 = sreplicate @4 (sfromR v6 !$ [1]) ; v16 = sreplicate @4 (sfromR v6 !$ [0]) ; v17 = tproject1 (tproject1 (tproject2 v1)) * v16 + (tproject1 (tproject2 (tproject1 (tproject2 v1))) * v15 + (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 v1)))) * v14 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))) * v13 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))) * v12 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))) * v11 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))) * v10 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))) * v9 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))))) * v8 + tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))))) * v7)))))))) ; v18 = sreplicate @3 (v17 !$ [3]) ; v19 = sreplicate @3 (v17 !$ [2]) ; v20 = sreplicate @3 (v17 !$ [1]) ; v21 = sreplicate @3 (v17 !$ [0]) ; v22 = tproject1 (tproject1 (tproject2 (tproject1 v1))) * v21 + (tproject1 (tproject2 (tproject1 (tproject2 (tproject1 v1)))) * v20 + (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1))))) * v19 + tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1)))))) * v18)) in tpair (tpair (tpair (tpair (sreplicate @784 (sscalar 7.0) * sreplicate @784 (v22 !$ [0]), tpair (sreplicate @784 (sscalar 7.0) * sreplicate @784 (v22 !$ [1]), tpair (sreplicate @784 (sscalar 7.0) * sreplicate @784 (v22 !$ [2]), Z0))), v22), tpair (tpair (v4 * v21, tpair (v4 * v20, tpair (v4 * v19, tpair (v4 * v18, Z0)))), v17)), tpair (tpair (v5 * v16, tpair (v5 * v15, tpair (v5 * v14, tpair (v5 * v13, tpair (v5 * v12, tpair (v5 * v11, tpair (v5 * v10, tpair (v5 * v9, tpair (v5 * v8, tpair (v5 * v7, Z0)))))))))), sfromR v6))"
  printArtifactPrimalPretty renames (simplifyArtifact artifactRev)
    @?= "\\v1 -> rfromS (let v4 = sfromVector (fromList [sdot0 (tproject1 (tproject1 (tproject1 (tproject1 v1)))) (sreplicate @784 (sscalar 7.0)), sdot0 (tproject1 (tproject2 (tproject1 (tproject1 (tproject1 v1))))) (sreplicate @784 (sscalar 7.0)), sdot0 (tproject1 (tproject2 (tproject2 (tproject1 (tproject1 (tproject1 v1)))))) (sreplicate @784 (sscalar 7.0))]) + tproject2 (tproject1 (tproject1 v1)) ; v5 = sfromVector (fromList [sdot0 (tproject1 (tproject1 (tproject2 (tproject1 v1)))) v4, sdot0 (tproject1 (tproject2 (tproject1 (tproject2 (tproject1 v1))))) v4, sdot0 (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1)))))) v4, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1))))))) v4]) + tproject2 (tproject2 (tproject1 v1)) in sfromVector (fromList [sdot0 (tproject1 (tproject1 (tproject2 v1))) v5, sdot0 (tproject1 (tproject2 (tproject1 (tproject2 v1)))) v5, sdot0 (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 v1))))) v5, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))) v5, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))) v5, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))) v5, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))) v5, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))))) v5, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))))) v5, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))))))) v5]) + tproject2 (tproject2 v1))"

testVTOPPNonLin :: Assertion
testVTOPPNonLin = do
  resetVarCounter
  let renames = IM.empty
      blackGlyph = treplicate (SNat @SizeMnistGlyph) knownSTK
                   $ fromPrimal $ rconcrete $ Nested.rscalar 7
      afcnn2TnonLin :: MnistFcnnRanked1.ADFcnnMnist1Parameters
                         (AstTensor AstMethodLet FullSpan) 3 4 Double
                    -> AstTensor AstMethodLet FullSpan (TKR 1 Double)
      afcnn2TnonLin =
        MnistFcnnRanked1.afcnnMnist1 logisticS softMax1S
                                     (SNat @3) (SNat @4) (sfromR blackGlyph)
      ftk = tftk @RepN (knownSTK @(XParams 3 4 Double))
                       (toTarget @RepN valsInitVTOPP)
      (artifactRevnonLin, _) = revArtifactAdapt True afcnn2TnonLin ftk
  printArtifactPretty renames artifactRevnonLin
    @?= "\\v28 v1 -> let v11 = sfromVector (fromList [ssum @784 (tproject1 (tproject1 (tproject1 (tproject1 v1))) * sreplicate @784 (sscalar 7.0)), ssum @784 (tproject1 (tproject2 (tproject1 (tproject1 (tproject1 v1)))) * sreplicate @784 (sscalar 7.0)), ssum @784 (tproject1 (tproject2 (tproject2 (tproject1 (tproject1 (tproject1 v1))))) * sreplicate @784 (sscalar 7.0))]) + tproject2 (tproject1 (tproject1 v1)) ; v12 = exp (negate v11) ; v13 = sconcrete (sfromListLinear [3] [1.0,1.0,1.0]) + v12 ; v14 = recip v13 ; v15 = sconcrete (sfromListLinear [3] [1.0,1.0,1.0]) + negate v14 ; v16 = v14 * v15 ; v17 = scast (sconcrete (sfromListLinear [3] [0.0,0.0,0.0]) + v14) ; v18 = scast (sfromVector (fromList [ssum @3 (tproject1 (tproject1 (tproject2 (tproject1 v1))) * v17), ssum @3 (tproject1 (tproject2 (tproject1 (tproject2 (tproject1 v1)))) * v17), ssum @3 (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1))))) * v17), ssum @3 (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1)))))) * v17)])) + tproject2 (tproject2 (tproject1 v1)) ; v19 = exp (negate v18) ; v20 = sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + v19 ; v21 = recip v20 ; v22 = sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + negate v21 ; v23 = v21 * v22 ; v24 = sconcrete (sfromListLinear [4] [0.0,0.0,0.0,0.0]) + v21 ; v25 = exp (sfromVector (fromList [ssum @4 (tproject1 (tproject1 (tproject2 v1)) * v24), ssum @4 (tproject1 (tproject2 (tproject1 (tproject2 v1))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 v1)))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))))) * v24)]) + tproject2 (tproject2 v1)) ; x26 = ssum @10 v25 ; v27 = sreplicate @10 (recip x26) ; v29 = v25 * (sreplicate @10 (negate (recip (x26 * x26)) * ssum @10 (v25 * sfromR v28)) + v27 * sfromR v28) ; v30 = sreplicate @4 (v29 !$ [9]) ; v31 = sreplicate @4 (v29 !$ [8]) ; v32 = sreplicate @4 (v29 !$ [7]) ; v33 = sreplicate @4 (v29 !$ [6]) ; v34 = sreplicate @4 (v29 !$ [5]) ; v35 = sreplicate @4 (v29 !$ [4]) ; v36 = sreplicate @4 (v29 !$ [3]) ; v37 = sreplicate @4 (v29 !$ [2]) ; v38 = sreplicate @4 (v29 !$ [1]) ; v39 = sreplicate @4 (v29 !$ [0]) ; v40 = v23 * (tproject1 (tproject1 (tproject2 v1)) * v39 + (tproject1 (tproject2 (tproject1 (tproject2 v1))) * v38 + (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 v1)))) * v37 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))) * v36 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))) * v35 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))) * v34 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))) * v33 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))) * v32 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))))) * v31 + tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))))) * v30))))))))) ; v41 = scast v40 ; v42 = sreplicate @3 (v41 !$ [3]) ; v43 = sreplicate @3 (v41 !$ [2]) ; v44 = sreplicate @3 (v41 !$ [1]) ; v45 = sreplicate @3 (v41 !$ [0]) ; v46 = v16 * scast (tproject1 (tproject1 (tproject2 (tproject1 v1))) * v45 + (tproject1 (tproject2 (tproject1 (tproject2 (tproject1 v1)))) * v44 + (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1))))) * v43 + tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1)))))) * v42))) in tpair (tpair (tpair (tpair (sreplicate @784 (sscalar 7.0) * sreplicate @784 (v46 !$ [0]), tpair (sreplicate @784 (sscalar 7.0) * sreplicate @784 (v46 !$ [1]), tpair (sreplicate @784 (sscalar 7.0) * sreplicate @784 (v46 !$ [2]), Z0))), v46), tpair (tpair (v17 * v45, tpair (v17 * v44, tpair (v17 * v43, tpair (v17 * v42, Z0)))), v40)), tpair (tpair (v24 * v39, tpair (v24 * v38, tpair (v24 * v37, tpair (v24 * v36, tpair (v24 * v35, tpair (v24 * v34, tpair (v24 * v33, tpair (v24 * v32, tpair (v24 * v31, tpair (v24 * v30, Z0)))))))))), v29))"
  printArtifactPrimalPretty renames artifactRevnonLin
    @?= "\\v1 -> let v11 = sfromVector (fromList [ssum @784 (tproject1 (tproject1 (tproject1 (tproject1 v1))) * sreplicate @784 (sscalar 7.0)), ssum @784 (tproject1 (tproject2 (tproject1 (tproject1 (tproject1 v1)))) * sreplicate @784 (sscalar 7.0)), ssum @784 (tproject1 (tproject2 (tproject2 (tproject1 (tproject1 (tproject1 v1))))) * sreplicate @784 (sscalar 7.0))]) + tproject2 (tproject1 (tproject1 v1)) ; v12 = exp (negate v11) ; v13 = sconcrete (sfromListLinear [3] [1.0,1.0,1.0]) + v12 ; v14 = recip v13 ; v17 = scast (sconcrete (sfromListLinear [3] [0.0,0.0,0.0]) + v14) ; v18 = scast (sfromVector (fromList [ssum @3 (tproject1 (tproject1 (tproject2 (tproject1 v1))) * v17), ssum @3 (tproject1 (tproject2 (tproject1 (tproject2 (tproject1 v1)))) * v17), ssum @3 (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1))))) * v17), ssum @3 (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1)))))) * v17)])) + tproject2 (tproject2 (tproject1 v1)) ; v19 = exp (negate v18) ; v20 = sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + v19 ; v21 = recip v20 ; v24 = sconcrete (sfromListLinear [4] [0.0,0.0,0.0,0.0]) + v21 ; v25 = exp (sfromVector (fromList [ssum @4 (tproject1 (tproject1 (tproject2 v1)) * v24), ssum @4 (tproject1 (tproject2 (tproject1 (tproject2 v1))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 v1)))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))))) * v24), ssum @4 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))))) * v24)]) + tproject2 (tproject2 v1)) ; x26 = ssum @10 v25 ; v27 = sreplicate @10 (recip x26) in rfromS (v27 * v25)"
  printArtifactPretty renames (simplifyArtifact artifactRevnonLin)
    @?= "\\v28 v1 -> let v14 = recip (sconcrete (sfromListLinear [3] [1.0,1.0,1.0]) + exp (negate (sfromVector (fromList [sdot0 (tproject1 (tproject1 (tproject1 (tproject1 v1)))) (sreplicate @784 (sscalar 7.0)), sdot0 (tproject1 (tproject2 (tproject1 (tproject1 (tproject1 v1))))) (sreplicate @784 (sscalar 7.0)), sdot0 (tproject1 (tproject2 (tproject2 (tproject1 (tproject1 (tproject1 v1)))))) (sreplicate @784 (sscalar 7.0))])) + negate (tproject2 (tproject1 (tproject1 v1))))) ; v17 = scast (sconcrete (sfromListLinear [3] [0.0,0.0,0.0]) + v14) ; v21 = recip (sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + exp (negate (scast (sfromVector (fromList [sdot0 (tproject1 (tproject1 (tproject2 (tproject1 v1)))) v17, sdot0 (tproject1 (tproject2 (tproject1 (tproject2 (tproject1 v1))))) v17, sdot0 (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1)))))) v17, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1))))))) v17]))) + negate (tproject2 (tproject2 (tproject1 v1))))) ; v24 = sconcrete (sfromListLinear [4] [0.0,0.0,0.0,0.0]) + v21 ; v25 = exp (sfromVector (fromList [sdot0 (tproject1 (tproject1 (tproject2 v1))) v24, sdot0 (tproject1 (tproject2 (tproject1 (tproject2 v1)))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 v1))))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))))))) v24]) + tproject2 (tproject2 v1)) ; x26 = ssum @10 v25 ; v29 = v25 * (sreplicate @10 (negate (recip (x26 * x26)) * sdot0 v25 (sfromR v28)) + sreplicate @10 (recip x26) * sfromR v28) ; v30 = sreplicate @4 (v29 !$ [9]) ; v31 = sreplicate @4 (v29 !$ [8]) ; v32 = sreplicate @4 (v29 !$ [7]) ; v33 = sreplicate @4 (v29 !$ [6]) ; v34 = sreplicate @4 (v29 !$ [5]) ; v35 = sreplicate @4 (v29 !$ [4]) ; v36 = sreplicate @4 (v29 !$ [3]) ; v37 = sreplicate @4 (v29 !$ [2]) ; v38 = sreplicate @4 (v29 !$ [1]) ; v39 = sreplicate @4 (v29 !$ [0]) ; v40 = (v21 * (sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + negate v21)) * (tproject1 (tproject1 (tproject2 v1)) * v39 + (tproject1 (tproject2 (tproject1 (tproject2 v1))) * v38 + (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 v1)))) * v37 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))) * v36 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))) * v35 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))) * v34 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))) * v33 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))) * v32 + (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))))) * v31 + tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))))) * v30))))))))) ; v41 = scast v40 ; v42 = sreplicate @3 (v41 !$ [3]) ; v43 = sreplicate @3 (v41 !$ [2]) ; v44 = sreplicate @3 (v41 !$ [1]) ; v45 = sreplicate @3 (v41 !$ [0]) ; v46 = (v14 * (sconcrete (sfromListLinear [3] [1.0,1.0,1.0]) + negate v14)) * scast (tproject1 (tproject1 (tproject2 (tproject1 v1))) * v45 + (tproject1 (tproject2 (tproject1 (tproject2 (tproject1 v1)))) * v44 + (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1))))) * v43 + tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1)))))) * v42))) in tpair (tpair (tpair (tpair (sreplicate @784 (sscalar 7.0) * sreplicate @784 (v46 !$ [0]), tpair (sreplicate @784 (sscalar 7.0) * sreplicate @784 (v46 !$ [1]), tpair (sreplicate @784 (sscalar 7.0) * sreplicate @784 (v46 !$ [2]), Z0))), v46), tpair (tpair (v17 * v45, tpair (v17 * v44, tpair (v17 * v43, tpair (v17 * v42, Z0)))), v40)), tpair (tpair (v24 * v39, tpair (v24 * v38, tpair (v24 * v37, tpair (v24 * v36, tpair (v24 * v35, tpair (v24 * v34, tpair (v24 * v33, tpair (v24 * v32, tpair (v24 * v31, tpair (v24 * v30, Z0)))))))))), v29))"
  printArtifactPrimalPretty renames (simplifyArtifact artifactRevnonLin)
    @?= "\\v1 -> rfromS (let v17 = scast (sconcrete (sfromListLinear [3] [0.0,0.0,0.0]) + recip (sconcrete (sfromListLinear [3] [1.0,1.0,1.0]) + exp (negate (sfromVector (fromList [sdot0 (tproject1 (tproject1 (tproject1 (tproject1 v1)))) (sreplicate @784 (sscalar 7.0)), sdot0 (tproject1 (tproject2 (tproject1 (tproject1 (tproject1 v1))))) (sreplicate @784 (sscalar 7.0)), sdot0 (tproject1 (tproject2 (tproject2 (tproject1 (tproject1 (tproject1 v1)))))) (sreplicate @784 (sscalar 7.0))])) + negate (tproject2 (tproject1 (tproject1 v1)))))) ; v24 = sconcrete (sfromListLinear [4] [0.0,0.0,0.0,0.0]) + recip (sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + exp (negate (scast (sfromVector (fromList [sdot0 (tproject1 (tproject1 (tproject2 (tproject1 v1)))) v17, sdot0 (tproject1 (tproject2 (tproject1 (tproject2 (tproject1 v1))))) v17, sdot0 (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1)))))) v17, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 (tproject1 v1))))))) v17]))) + negate (tproject2 (tproject2 (tproject1 v1))))) ; v25 = exp (sfromVector (fromList [sdot0 (tproject1 (tproject1 (tproject2 v1))) v24, sdot0 (tproject1 (tproject2 (tproject1 (tproject2 v1)))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject1 (tproject2 v1))))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1))))))))))) v24, sdot0 (tproject1 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject2 (tproject1 (tproject2 v1)))))))))))) v24]) + tproject2 (tproject2 v1)) in sreplicate @10 (recip (ssum @10 v25)) * v25)"

valsInitVT2OPP :: MnistFcnnRanked2.ADFcnnMnist2Parameters RepN Double Float
valsInitVT2OPP =
  ( ( RepN $ Nested.rfromListPrimLinear [4, 3]
               (concat $ replicate 4 [1, 2, 3])
    , RepN $ Nested.rfromListPrimLinear [4] [1, 2, 3, 4] )
  , ( RepN $ Nested.rfromListPrimLinear [5, 4]
               (concat $ replicate 5 [1, 2, 3, 4])
    , RepN $ Nested.rfromListPrimLinear [5] [1, 2, 3, 4, 5] )
  , ( RepN $ Nested.rfromListPrimLinear [2, 5]
               (concat $ replicate 2 [1, 2, 3, 4, 5])
    , RepN $ Nested.rfromListPrimLinear [2] [1, 2] ) )

testVT2OPP :: Assertion
testVT2OPP = do
  resetVarCounter
  let renames = IM.empty
      blackGlyph = treplicate (SNat @3) knownSTK
                   $ fromPrimal $ rconcrete $ Nested.rscalar 7
      afcnn2T :: MnistFcnnRanked2.ADFcnnMnist2Parameters
                   (AstTensor AstMethodLet FullSpan) Double Float
              -> AstTensor AstMethodLet FullSpan (TKR 1 Double)
      afcnn2T = MnistFcnnRanked2.afcnnMnist2 id id blackGlyph
      ftk = tftk @RepN (knownSTK @(XParams2 Double Float))
                       (toTarget @RepN valsInitVT2OPP)
      (artifactRev, _) = revArtifactAdapt True afcnn2T ftk
  printArtifactPretty renames artifactRev
    @?= "\\v7 m1 -> let m5 = str (sreplicate @5 (scast (ssum @3 (str (sreplicate @4 (sreplicate @3 (sscalar 7.0))) * str (sfromR (tproject1 (tproject1 (tproject1 m1))))) + sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; m6 = str (sreplicate @2 (ssum @4 (scast (m5 * str (sfromR (tproject1 (tproject2 (tproject1 m1)))))) + sfromR (tproject2 (tproject2 (tproject1 m1))))) ; v8 = ssum @2 (str (str (sfromR (tproject1 (tproject2 m1))) * sreplicate @5 (sfromR v7))) ; m9 = scast (sreplicate @4 v8) ; v10 = scast (ssum @5 (str (str (sfromR (tproject1 (tproject2 (tproject1 m1)))) * m9))) in tpair (tpair (tpair (rfromS (str (str (sreplicate @4 (sreplicate @3 (sscalar 7.0))) * sreplicate @3 v10)), rfromS v10), tpair (rfromS (str (m5 * m9)), rfromS v8)), tpair (rfromS (str (m6 * sreplicate @5 (sfromR v7))), rfromS (sfromR v7)))"
  printArtifactPrimalPretty renames artifactRev
    @?= "\\m1 -> let m5 = str (sreplicate @5 (scast (ssum @3 (str (sreplicate @4 (sreplicate @3 (sscalar 7.0))) * str (sfromR (tproject1 (tproject1 (tproject1 m1))))) + sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; m6 = str (sreplicate @2 (ssum @4 (scast (m5 * str (sfromR (tproject1 (tproject2 (tproject1 m1)))))) + sfromR (tproject2 (tproject2 (tproject1 m1))))) in rfromS (ssum @5 (m6 * str (sfromR (tproject1 (tproject2 m1)))) + sfromR (tproject2 (tproject2 m1)))"
  printArtifactPretty renames (simplifyArtifact artifactRev)
    @?= "\\v7 m1 -> tfromS (let m5 = str (sreplicate @5 (scast (smatvecmul (sfromR (tproject1 (tproject1 (tproject1 m1)))) (sreplicate @3 (sscalar 7.0)) + sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; v8 = smatvecmul (str (sfromR (tproject1 (tproject2 m1)))) (sfromR v7) ; m9 = sreplicate @4 (scast v8) ; v10 = ssum @5 (scast (sfromR (tproject1 (tproject2 (tproject1 m1))) * str m9)) in tpair (tpair (tpair (sreplicate @4 (sreplicate @3 (sscalar 7.0)) * str (sreplicate @3 v10), v10), tpair (str (m5 * m9), v8)), tpair (sreplicate @2 (ssum @4 (scast (m5 * str (sfromR (tproject1 (tproject2 (tproject1 m1)))))) + sfromR (tproject2 (tproject2 (tproject1 m1)))) * str (sreplicate @5 (sfromR v7)), v7)))"
  printArtifactSimple renames (simplifyArtifact artifactRev)
    @?= "\\v7 m1 -> tfromS (tlet (str (sreplicate @5 (scast (smatvecmul (sfromR (tproject1 (tproject1 (tproject1 m1)))) (sreplicate @3 (sscalar 7.0)) + sfromR (tproject2 (tproject1 (tproject1 m1))))))) (\\m5 -> tlet (smatvecmul (str (sfromR (tproject1 (tproject2 m1)))) (sfromR v7)) (\\v8 -> tlet (sreplicate @4 (scast v8)) (\\m9 -> tlet (ssum @5 (scast (sfromR (tproject1 (tproject2 (tproject1 m1))) * str m9))) (\\v10 -> tpair (tpair (tpair (sreplicate @4 (sreplicate @3 (sscalar 7.0)) * str (sreplicate @3 v10), v10), tpair (str (m5 * m9), v8)), tpair (sreplicate @2 (ssum @4 (scast (m5 * str (sfromR (tproject1 (tproject2 (tproject1 m1)))))) + sfromR (tproject2 (tproject2 (tproject1 m1)))) * str (sreplicate @5 (sfromR v7)), v7)))))))"

testVT2OPPNonLin :: Assertion
testVT2OPPNonLin = do
  resetVarCounter
  let renames = IM.empty
      blackGlyph = treplicate (SNat @3) knownSTK
                   $ fromPrimal $ rconcrete $ Nested.rscalar 7
      afcnn2TnonLin :: MnistFcnnRanked2.ADFcnnMnist2Parameters
                         (AstTensor AstMethodLet FullSpan) Float Float
                    -> AstTensor AstMethodLet FullSpan (TKR 1 Float)
      afcnn2TnonLin = MnistFcnnRanked2.afcnnMnist2 logistic softMax1 blackGlyph
      constant =
        let ((a1, a2), (a3, a4), (a5, a6)) = valsInitVT2OPP
        in ( ( rcast $ fromPrimal $ rconcrete $ unRepN a1
             , rcast $ fromPrimal $ rconcrete $ unRepN a2 )
           , ( fromPrimal $ rcast $ rconcrete $ unRepN a3
             , fromPrimal $ rcast $ rconcrete $ unRepN a4 )
           , ( rcast $ fromPrimal $ rconcrete $ unRepN a5
             , fromPrimal $ rcast $ rconcrete $ unRepN a6 ) )
      (_, ast3) = funToAst (FTKR (0 :$: ZSR) (FTKScalar @Float))
                           (const $ afcnn2TnonLin constant)
  "\\dummy" ++ " -> " ++ printAstSimple renames ast3
    @?= "\\dummy -> rfromS (tlet (exp (ssum @5 (str (sreplicate @2 (tlet (ssum @4 (str (sreplicate @5 (tlet (ssum @3 (tfromPrimal (STKS [3,4] STKScalar) (str (sreplicate @4 (sreplicate @3 (sscalar 7.0)))) * tfromPrimal (STKS [3,4] STKScalar) (sconcrete (sfromListLinear [3,4] [1.0,1.0,1.0,1.0,2.0,2.0,2.0,2.0,3.0,3.0,3.0,3.0]))) + tfromPrimal (STKS [4] STKScalar) (sconcrete (sfromListLinear [4] [1.0,2.0,3.0,4.0]))) (\\v3 -> tlet (tfromPrimal (STKS [4] STKScalar) (recip (sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + exp (negate (sfromR (tprimalPart (rfromS v3))))))) (\\v4 -> tlet (tfromDual (tdualPart (STKS [4] STKScalar) (tfromPrimal (STKS [4] STKScalar) (sfromR (tprimalPart (rfromS v4)) * (sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + negate (sfromR (tprimalPart (rfromS v4)))))) * tdualPart (STKS [4] STKScalar) (sfromR (tfromDual (tdualPart (STKR (SNat @1) STKScalar) (rfromS v3)))))) (\\v5 -> sfromR (tfromPrimal (STKR (SNat @1) STKScalar) (tprimalPart (rfromS v4))) + v5))))) * tfromPrimal (STKS [4,5] STKScalar) (sconcrete (sfromListLinear [4,5] [1.0,1.0,1.0,1.0,1.0,2.0,2.0,2.0,2.0,2.0,3.0,3.0,3.0,3.0,3.0,4.0,4.0,4.0,4.0,4.0]))) + tfromPrimal (STKS [5] STKScalar) (sconcrete (sfromListLinear [5] [1.0,2.0,3.0,4.0,5.0]))) (\\v7 -> tlet (tfromPrimal (STKS [5] STKScalar) (recip (sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + exp (negate (sfromR (tprimalPart (rfromS v7))))))) (\\v8 -> tlet (tfromDual (tdualPart (STKS [5] STKScalar) (tfromPrimal (STKS [5] STKScalar) (sfromR (tprimalPart (rfromS v8)) * (sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + negate (sfromR (tprimalPart (rfromS v8)))))) * tdualPart (STKS [5] STKScalar) (sfromR (tfromDual (tdualPart (STKR (SNat @1) STKScalar) (rfromS v7)))))) (\\v9 -> sfromR (tfromPrimal (STKR (SNat @1) STKScalar) (tprimalPart (rfromS v8))) + v9))))) * tfromPrimal (STKS [5,2] STKScalar) (sconcrete (sfromListLinear [5,2] [1.0,1.0,2.0,2.0,3.0,3.0,4.0,4.0,5.0,5.0]))) + tfromPrimal (STKS [2] STKScalar) (sconcrete (sfromListLinear [2] [1.0,2.0])))) (\\v11 -> sreplicate @2 (recip (ssum @2 v11)) * v11))"
  "\\dummy" ++ " -> " ++ printAstSimple renames (simplifyInlineContract ast3)
    @?= "\\dummy -> rfromS (tlet (exp (smatvecmul (tfromPrimal (STKS [2,5] STKScalar) (sconcrete (sfromListLinear [2,5] [1.0,2.0,3.0,4.0,5.0,1.0,2.0,3.0,4.0,5.0]))) (tlet (smatvecmul (tfromPrimal (STKS [5,4] STKScalar) (sconcrete (sfromListLinear [5,4] [1.0,2.0,3.0,4.0,1.0,2.0,3.0,4.0,1.0,2.0,3.0,4.0,1.0,2.0,3.0,4.0,1.0,2.0,3.0,4.0]))) (tlet (ssum @3 (tfromPrimal (STKS [3,4] STKScalar) (str (sreplicate @4 (sreplicate @3 (sscalar 7.0)))) * tfromPrimal (STKS [3,4] STKScalar) (sconcrete (sfromListLinear [3,4] [1.0,1.0,1.0,1.0,2.0,2.0,2.0,2.0,3.0,3.0,3.0,3.0]))) + tfromPrimal (STKS [4] STKScalar) (sconcrete (sfromListLinear [4] [1.0,2.0,3.0,4.0]))) (\\v3 -> tlet (tfromPrimal (STKS [4] STKScalar) (recip (sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + exp (negate (tprimalPart v3))))) (\\v4 -> tfromPrimal (STKS [4] STKScalar) (tprimalPart v4) + tfromDual (tdualPart (STKS [4] STKScalar) (tfromPrimal (STKS [4] STKScalar) (tprimalPart v4 * (sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + negate (tprimalPart v4)))) * tdualPart (STKS [4] STKScalar) v3)))) + tfromPrimal (STKS [5] STKScalar) (sconcrete (sfromListLinear [5] [1.0,2.0,3.0,4.0,5.0]))) (\\v7 -> tlet (tfromPrimal (STKS [5] STKScalar) (recip (sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + exp (negate (tprimalPart v7))))) (\\v8 -> tfromPrimal (STKS [5] STKScalar) (tprimalPart v8) + tfromDual (tdualPart (STKS [5] STKScalar) (tfromPrimal (STKS [5] STKScalar) (tprimalPart v8 * (sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + negate (tprimalPart v8)))) * tdualPart (STKS [5] STKScalar) v7)))) + tfromPrimal (STKS [2] STKScalar) (sconcrete (sfromListLinear [2] [1.0,2.0])))) (\\v11 -> sreplicate @2 (recip (ssum @2 v11)) * v11))"

testVT2OPPNonLin2 :: Assertion
testVT2OPPNonLin2 = do
  resetVarCounter
  let renames = IM.empty
      blackGlyph = treplicate (SNat @3) knownSTK
                   $ fromPrimal $ rconcrete $ Nested.rscalar 7
      afcnn2TnonLin :: MnistFcnnRanked2.ADFcnnMnist2Parameters
                         (AstTensor AstMethodLet FullSpan) Double Float
                    -> AstTensor AstMethodLet FullSpan (TKR 1 Double)
      afcnn2TnonLin = MnistFcnnRanked2.afcnnMnist2 logistic softMax1 blackGlyph
      ftk = tftk @RepN (knownSTK @(XParams2 Double Float))
                       (toTarget @RepN valsInitVT2OPP)
      (artifactRevnonLin, _) = revArtifactAdapt True afcnn2TnonLin ftk
  printArtifactPretty renames artifactRevnonLin
    @?= "\\v29 m1 -> let v12 = ssum @3 (str (sreplicate @4 (sreplicate @3 (sscalar 7.0))) * str (sfromR (tproject1 (tproject1 (tproject1 m1))))) + sfromR (tproject2 (tproject1 (tproject1 m1))) ; v13 = exp (negate v12) ; v14 = sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + v13 ; v15 = recip v14 ; v16 = sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + negate v15 ; v17 = v15 * v16 ; m18 = str (sreplicate @5 (scast (sconcrete (sfromListLinear [4] [0.0,0.0,0.0,0.0]) + v15))) ; v19 = ssum @4 (scast (m18 * str (sfromR (tproject1 (tproject2 (tproject1 m1)))))) + sfromR (tproject2 (tproject2 (tproject1 m1))) ; v20 = exp (negate v19) ; v21 = sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + v20 ; v22 = recip v21 ; v23 = sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + negate v22 ; v24 = v22 * v23 ; m25 = str (sreplicate @2 (sconcrete (sfromListLinear [5] [0.0,0.0,0.0,0.0,0.0]) + v22)) ; v26 = exp (ssum @5 (m25 * str (sfromR (tproject1 (tproject2 m1)))) + sfromR (tproject2 (tproject2 m1))) ; x27 = ssum @2 v26 ; v28 = sreplicate @2 (recip x27) ; v30 = v26 * (sreplicate @2 (negate (recip (x27 * x27)) * ssum @2 (v26 * sfromR v29)) + v28 * sfromR v29) ; m31 = sreplicate @5 v30 ; v32 = ssum @2 (str (str (sfromR (tproject1 (tproject2 m1))) * m31)) ; v33 = v24 * v32 ; m34 = scast (sreplicate @4 v33) ; v35 = scast (ssum @5 (str (str (sfromR (tproject1 (tproject2 (tproject1 m1)))) * m34))) ; v36 = v17 * v35 in tpair (tpair (tpair (rfromS (str (str (sreplicate @4 (sreplicate @3 (sscalar 7.0))) * sreplicate @3 v36)), rfromS v36), tpair (rfromS (str (m18 * m34)), rfromS v33)), tpair (rfromS (str (m25 * m31)), rfromS v30))"
  printArtifactPrimalPretty renames artifactRevnonLin
    @?= "\\m1 -> let v12 = ssum @3 (str (sreplicate @4 (sreplicate @3 (sscalar 7.0))) * str (sfromR (tproject1 (tproject1 (tproject1 m1))))) + sfromR (tproject2 (tproject1 (tproject1 m1))) ; v13 = exp (negate v12) ; v14 = sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + v13 ; v15 = recip v14 ; m18 = str (sreplicate @5 (scast (sconcrete (sfromListLinear [4] [0.0,0.0,0.0,0.0]) + v15))) ; v19 = ssum @4 (scast (m18 * str (sfromR (tproject1 (tproject2 (tproject1 m1)))))) + sfromR (tproject2 (tproject2 (tproject1 m1))) ; v20 = exp (negate v19) ; v21 = sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + v20 ; v22 = recip v21 ; m25 = str (sreplicate @2 (sconcrete (sfromListLinear [5] [0.0,0.0,0.0,0.0,0.0]) + v22)) ; v26 = exp (ssum @5 (m25 * str (sfromR (tproject1 (tproject2 m1)))) + sfromR (tproject2 (tproject2 m1))) ; x27 = ssum @2 v26 ; v28 = sreplicate @2 (recip x27) in rfromS (v28 * v26)"
  printArtifactPretty renames (simplifyArtifact artifactRevnonLin)
    @?= "\\v29 m1 -> tfromS (let v15 = recip (sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + exp (negate (smatvecmul (sfromR (tproject1 (tproject1 (tproject1 m1)))) (sreplicate @3 (sscalar 7.0))) + negate (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; m18 = str (sreplicate @5 (scast (sconcrete (sfromListLinear [4] [0.0,0.0,0.0,0.0]) + v15))) ; v22 = recip (sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + exp (negate (ssum @4 (scast (m18 * str (sfromR (tproject1 (tproject2 (tproject1 m1))))))) + negate (sfromR (tproject2 (tproject2 (tproject1 m1)))))) ; m25 = str (sreplicate @2 (sconcrete (sfromListLinear [5] [0.0,0.0,0.0,0.0,0.0]) + v22)) ; v26 = exp (ssum @5 (m25 * str (sfromR (tproject1 (tproject2 m1)))) + sfromR (tproject2 (tproject2 m1))) ; x27 = ssum @2 v26 ; v30 = v26 * (sreplicate @2 (negate (recip (x27 * x27)) * sdot0 v26 (sfromR v29)) + sreplicate @2 (recip x27) * sfromR v29) ; v33 = (v22 * (sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + negate v22)) * smatvecmul (str (sfromR (tproject1 (tproject2 m1)))) v30 ; m34 = sreplicate @4 (scast v33) ; v36 = (v15 * (sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + negate v15)) * ssum @5 (scast (sfromR (tproject1 (tproject2 (tproject1 m1))) * str m34)) in tpair (tpair (tpair (sreplicate @4 (sreplicate @3 (sscalar 7.0)) * str (sreplicate @3 v36), v36), tpair (str (m18 * m34), v33)), tpair (str m25 * str (sreplicate @5 v30), v30)))"
  printArtifactPrimalPretty renames (simplifyArtifact artifactRevnonLin)
    @?= "\\m1 -> rfromS (let v26 = exp (smatvecmul (sfromR (tproject1 (tproject2 m1))) (sconcrete (sfromListLinear [5] [0.0,0.0,0.0,0.0,0.0]) + recip (sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + exp (negate (ssum @4 (scast (str (sreplicate @5 (scast (sconcrete (sfromListLinear [4] [0.0,0.0,0.0,0.0]) + recip (sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + exp (negate (smatvecmul (sfromR (tproject1 (tproject1 (tproject1 m1)))) (sreplicate @3 (sscalar 7.0))) + negate (sfromR (tproject2 (tproject1 (tproject1 m1))))))))) * str (sfromR (tproject1 (tproject2 (tproject1 m1))))))) + negate (sfromR (tproject2 (tproject2 (tproject1 m1))))))) + sfromR (tproject2 (tproject2 m1))) in sreplicate @2 (recip (ssum @2 v26)) * v26)"

testVT2OPPNonLin3 :: Assertion
testVT2OPPNonLin3 = do
  resetVarCounter
  let renames = IM.empty
      blackGlyph = treplicate (SNat @3) knownSTK
                   $ fromPrimal $ rconcrete $ Nested.rscalar 7
      blackLabel = treplicate (SNat @2) knownSTK
                   $ fromPrimal $ rconcrete $ Nested.rscalar 8
      afcnn2TnonLin :: MnistFcnnRanked2.ADFcnnMnist2Parameters
                         (AstTensor AstMethodLet FullSpan) Double Float
                    -> AstTensor AstMethodLet FullSpan (TKScalar Double)
      afcnn2TnonLin = MnistFcnnRanked2.afcnnMnistLoss2 (blackGlyph,  blackLabel)
      ftk = tftk @RepN (knownSTK @(XParams2 Double Float))
                       (toTarget @RepN valsInitVT2OPP)
      (artifactRevnonLin, _) = revArtifactAdapt True afcnn2TnonLin ftk
  printArtifactPretty renames artifactRevnonLin
    @?= "\\x31 m1 -> let v12 = ssum @3 (str (sreplicate @4 (sreplicate @3 (sscalar 7.0))) * str (sfromR (tproject1 (tproject1 (tproject1 m1))))) + sfromR (tproject2 (tproject1 (tproject1 m1))) ; v13 = exp (negate v12) ; v14 = sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + v13 ; v15 = recip v14 ; v16 = sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + negate v15 ; v17 = v15 * v16 ; m18 = str (sreplicate @5 (scast (sconcrete (sfromListLinear [4] [0.0,0.0,0.0,0.0]) + v15))) ; v19 = ssum @4 (scast (m18 * str (sfromR (tproject1 (tproject2 (tproject1 m1)))))) + sfromR (tproject2 (tproject2 (tproject1 m1))) ; v20 = exp (negate v19) ; v21 = sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + v20 ; v22 = recip v21 ; v23 = sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + negate v22 ; v24 = v22 * v23 ; m25 = str (sreplicate @2 (sconcrete (sfromListLinear [5] [0.0,0.0,0.0,0.0,0.0]) + v22)) ; v26 = exp (ssum @5 (m25 * str (sfromR (tproject1 (tproject2 m1)))) + sfromR (tproject2 (tproject2 m1))) ; x27 = ssum @2 v26 ; v28 = sreplicate @2 (recip x27) ; v29 = v28 * v26 ; v32 = recip v29 * (sreplicate @2 (sscalar 8.0) * sreplicate @2 (sscalar (-1.0) * sfromK x31)) ; v33 = v26 * (sreplicate @2 (negate (recip (x27 * x27)) * ssum @2 (v26 * v32)) + v28 * v32) ; m34 = sreplicate @5 v33 ; v35 = ssum @2 (str (str (sfromR (tproject1 (tproject2 m1))) * m34)) ; v36 = v24 * v35 ; m37 = scast (sreplicate @4 v36) ; v38 = scast (ssum @5 (str (str (sfromR (tproject1 (tproject2 (tproject1 m1)))) * m37))) ; v39 = v17 * v38 in tpair (tpair (tpair (rfromS (str (str (sreplicate @4 (sreplicate @3 (sscalar 7.0))) * sreplicate @3 v39)), rfromS v39), tpair (rfromS (str (m18 * m37)), rfromS v36)), tpair (rfromS (str (m25 * m34)), rfromS v33))"
  printArtifactPrimalPretty renames artifactRevnonLin
    @?= "\\m1 -> let v12 = ssum @3 (str (sreplicate @4 (sreplicate @3 (sscalar 7.0))) * str (sfromR (tproject1 (tproject1 (tproject1 m1))))) + sfromR (tproject2 (tproject1 (tproject1 m1))) ; v13 = exp (negate v12) ; v14 = sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + v13 ; v15 = recip v14 ; m18 = str (sreplicate @5 (scast (sconcrete (sfromListLinear [4] [0.0,0.0,0.0,0.0]) + v15))) ; v19 = ssum @4 (scast (m18 * str (sfromR (tproject1 (tproject2 (tproject1 m1)))))) + sfromR (tproject2 (tproject2 (tproject1 m1))) ; v20 = exp (negate v19) ; v21 = sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + v20 ; v22 = recip v21 ; m25 = str (sreplicate @2 (sconcrete (sfromListLinear [5] [0.0,0.0,0.0,0.0,0.0]) + v22)) ; v26 = exp (ssum @5 (m25 * str (sfromR (tproject1 (tproject2 m1)))) + sfromR (tproject2 (tproject2 m1))) ; x27 = ssum @2 v26 ; v28 = sreplicate @2 (recip x27) ; v29 = v28 * v26 ; v30 = log v29 in kfromS (negate (ssum @2 (v30 * sreplicate @2 (sscalar 8.0))))"
  printArtifactPretty renames (simplifyArtifact artifactRevnonLin)
    @?= "\\x31 m1 -> tfromS (let v15 = recip (sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + exp (negate (smatvecmul (sfromR (tproject1 (tproject1 (tproject1 m1)))) (sreplicate @3 (sscalar 7.0))) + negate (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; m18 = str (sreplicate @5 (scast (sconcrete (sfromListLinear [4] [0.0,0.0,0.0,0.0]) + v15))) ; v22 = recip (sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + exp (negate (ssum @4 (scast (m18 * str (sfromR (tproject1 (tproject2 (tproject1 m1))))))) + negate (sfromR (tproject2 (tproject2 (tproject1 m1)))))) ; m25 = str (sreplicate @2 (sconcrete (sfromListLinear [5] [0.0,0.0,0.0,0.0,0.0]) + v22)) ; v26 = exp (ssum @5 (m25 * str (sfromR (tproject1 (tproject2 m1)))) + sfromR (tproject2 (tproject2 m1))) ; x27 = ssum @2 v26 ; v28 = sreplicate @2 (recip x27) ; v32 = recip (v28 * v26) * (sreplicate @2 (sscalar 8.0) * sreplicate @2 (sscalar (-1.0) * sfromK x31)) ; v33 = v26 * (sreplicate @2 (negate (recip (x27 * x27)) * sdot0 v26 v32) + v28 * v32) ; v36 = (v22 * (sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + negate v22)) * smatvecmul (str (sfromR (tproject1 (tproject2 m1)))) v33 ; m37 = sreplicate @4 (scast v36) ; v39 = (v15 * (sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + negate v15)) * ssum @5 (scast (sfromR (tproject1 (tproject2 (tproject1 m1))) * str m37)) in tpair (tpair (tpair (sreplicate @4 (sreplicate @3 (sscalar 7.0)) * str (sreplicate @3 v39), v39), tpair (str (m18 * m37), v36)), tpair (str m25 * str (sreplicate @5 v33), v33)))"
  printArtifactPrimalPretty renames (simplifyArtifact artifactRevnonLin)
    @?= "\\m1 -> kfromS (let v26 = exp (smatvecmul (sfromR (tproject1 (tproject2 m1))) (sconcrete (sfromListLinear [5] [0.0,0.0,0.0,0.0,0.0]) + recip (sconcrete (sfromListLinear [5] [1.0,1.0,1.0,1.0,1.0]) + exp (negate (ssum @4 (scast (str (sreplicate @5 (scast (sconcrete (sfromListLinear [4] [0.0,0.0,0.0,0.0]) + recip (sconcrete (sfromListLinear [4] [1.0,1.0,1.0,1.0]) + exp (negate (smatvecmul (sfromR (tproject1 (tproject1 (tproject1 m1)))) (sreplicate @3 (sscalar 7.0))) + negate (sfromR (tproject2 (tproject1 (tproject1 m1))))))))) * str (sfromR (tproject1 (tproject2 (tproject1 m1))))))) + negate (sfromR (tproject2 (tproject2 (tproject1 m1))))))) + sfromR (tproject2 (tproject2 m1))) in negate (sdot0 (log (sreplicate @2 (recip (ssum @2 v26)) * v26)) (sreplicate @2 (sscalar 8.0))))"


-- * RNNR tests

tensorMnistPPRNNR :: TestTree
tensorMnistPPRNNR = testGroup "PP tests for RNN MNIST tests"
  [ testCase "RNNO PP" testRNNOPP
  , testCase "RNNO PP 2" testRNNOPP2
  ]

valsInitRNNOPP
  :: Int -> Int -> ADRnnMnistParameters RepN Double
valsInitRNNOPP out_width sizeMnistHeightI =
  ( ( RepN
      $ Nested.rfromListPrimLinear [out_width, sizeMnistHeightI]
                    (map fromIntegral [0 .. out_width * sizeMnistHeightI - 1])
    , RepN
      $ Nested.rfromListPrimLinear [out_width, out_width]
                    (map fromIntegral [0 .. out_width * out_width - 1])
    , RepN
      $ Nested.rfromListPrimLinear [out_width]
                                   (map fromIntegral [0 .. out_width - 1]) )
  , ( RepN
      $ Nested.rfromListPrimLinear [out_width, out_width]
                    (map fromIntegral [0 .. out_width * out_width - 1])
    , RepN
      $ Nested.rfromListPrimLinear [out_width, out_width]
                    (map fromIntegral [0 .. out_width * out_width - 1])
    , RepN
      $ Nested.rfromListPrimLinear [out_width]
                                   (map fromIntegral [0 .. out_width - 1]) )
  , ( RepN
       $ Nested.rfromListPrimLinear [sizeMnistLabelInt, out_width]
                    (map fromIntegral [0 .. sizeMnistLabelInt * out_width - 1])
    , RepN
      $ Nested.rfromListPrimLinear [sizeMnistLabelInt]
                    (map fromIntegral [0 .. sizeMnistLabelInt - 1]) ) )

testRNNOPP :: Assertion
testRNNOPP = do
  resetVarCounter
  let renames = IM.empty
      batch_size = 1
      sizeMnistHeightI = 1
      blackGlyph :: AstTensor AstMethodLet PrimalSpan (TKR 3 Double)
      blackGlyph = AstReplicate (SNat @1) knownSTK
                   $ AstReplicate (SNat @1) knownSTK
                   $ AstReplicate (SNat @1) knownSTK
                       (rconcrete $ Nested.rscalar 7
                        :: AstTensor AstMethodLet PrimalSpan (TKR 0 Double))
      afcnn2T :: ADRnnMnistParameters (AstTensor AstMethodLet FullSpan)
                                      Double
              -> AstTensor AstMethodLet FullSpan (TKR 2 Double)
      afcnn2T = MnistRnnRanked2.rnnMnistZeroR batch_size blackGlyph
      ftk = tftk @RepN (knownSTK @(X (ADRnnMnistParameters RepN Double)))
                       (toTarget @RepN $ valsInitRNNOPP 1 sizeMnistHeightI)
      (artifactRev, _) = revArtifactAdapt True afcnn2T ftk
  printArtifactPretty renames artifactRev
    @?= "\\m6 m1 -> let m2 = tanh ((ssum @1 (stranspose @[2,1,0] (sreplicate @1 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @1 (sreplicate @1 (sreplicate @1 (sscalar 7.0))))) + ssum @1 (stranspose @[2,1,0] (sreplicate @1 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @1 (sconcrete (sfromListLinear [1,1] [0.0]))))) + str (sreplicate @1 (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; t3 = str (sreplicate @1 m2) ; m4 = tanh ((ssum @1 (stranspose @[2,1,0] (sreplicate @1 (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1)))))) * t3) + ssum @1 (stranspose @[2,1,0] (sreplicate @1 (sfromR (tproject2 (tproject1 (tproject2 (tproject1 m1)))))) * str (sreplicate @1 (sconcrete (sfromListLinear [1,1] [0.0]))))) + str (sreplicate @1 (sfromR (tproject2 (tproject2 (tproject1 m1)))))) ; t5 = str (sreplicate @10 m4) ; m7 = (sconcrete (sfromListLinear [1,1] [1.0]) + negate m4 * m4) * ssum @10 (str (stranspose @[2,1,0] (sreplicate @1 (sfromR (tproject1 (tproject2 m1)))) * sreplicate @1 (sfromR m6))) ; t8 = sreplicate @1 m7 ; m9 = (sconcrete (sfromListLinear [1,1] [1.0]) + negate m2 * m2) * ssum @1 (str (stranspose @[2,1,0] (sreplicate @1 (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1)))))) * t8)) in tpair (tpair (tpair (tpair (rfromS (ssum @1 (stranspose @[2,1,0] (str (sreplicate @1 (sreplicate @1 (sreplicate @1 (sscalar 7.0)))) * sreplicate @1 m9))), rfromS (ssum @1 (stranspose @[2,1,0] (str (sreplicate @1 (sconcrete (sfromListLinear [1,1] [0.0]))) * sreplicate @1 m9)))), rfromS (ssum @1 (str m9))), tpair (tpair (rfromS (ssum @1 (stranspose @[2,1,0] (t3 * t8))), rfromS (ssum @1 (stranspose @[2,1,0] (str (sreplicate @1 (sconcrete (sfromListLinear [1,1] [0.0]))) * sreplicate @1 m7)))), rfromS (ssum @1 (str m7)))), tpair (rfromS (ssum @1 (stranspose @[2,1,0] (t5 * sreplicate @1 (sfromR m6)))), rfromS (ssum @1 (str (sfromR m6)))))"
  printArtifactPrimalPretty renames artifactRev
    @?= "\\m1 -> let m2 = tanh ((ssum @1 (stranspose @[2,1,0] (sreplicate @1 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @1 (sreplicate @1 (sreplicate @1 (sscalar 7.0))))) + ssum @1 (stranspose @[2,1,0] (sreplicate @1 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @1 (sconcrete (sfromListLinear [1,1] [0.0]))))) + str (sreplicate @1 (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; t3 = str (sreplicate @1 m2) ; m4 = tanh ((ssum @1 (stranspose @[2,1,0] (sreplicate @1 (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1)))))) * t3) + ssum @1 (stranspose @[2,1,0] (sreplicate @1 (sfromR (tproject2 (tproject1 (tproject2 (tproject1 m1)))))) * str (sreplicate @1 (sconcrete (sfromListLinear [1,1] [0.0]))))) + str (sreplicate @1 (sfromR (tproject2 (tproject2 (tproject1 m1)))))) ; t5 = str (sreplicate @10 m4) in rfromS (ssum @1 (stranspose @[2,1,0] (sreplicate @1 (sfromR (tproject1 (tproject2 m1)))) * t5) + str (sreplicate @1 (sfromR (tproject2 (tproject2 m1)))))"
  printArtifactPretty renames (simplifyArtifact artifactRev)
    @?= "\\m6 m1 -> tfromS (let m2 = tanh ((smatmul2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1))))) (sreplicate @1 (sreplicate @1 (sscalar 7.0))) + smatmul2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1))))) (sconcrete (sfromListLinear [1,1] [0.0]))) + str (sreplicate @1 (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; m4 = tanh ((smatmul2 (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1))))) m2 + smatmul2 (sfromR (tproject2 (tproject1 (tproject2 (tproject1 m1))))) (sconcrete (sfromListLinear [1,1] [0.0]))) + str (sreplicate @1 (sfromR (tproject2 (tproject2 (tproject1 m1)))))) ; m7 = (sconcrete (sfromListLinear [1,1] [1.0]) + negate m4 * m4) * smatmul2 (str (sfromR (tproject1 (tproject2 m1)))) (sfromR m6) ; m9 = (sconcrete (sfromListLinear [1,1] [1.0]) + negate m2 * m2) * smatmul2 (str (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1)))))) m7 in tpair (tpair (tpair (tpair (smatmul2 m9 (str (sreplicate @1 (sreplicate @1 (sscalar 7.0)))), smatmul2 m9 (sconcrete (sfromListLinear [1,1] [0.0]))), ssum @1 (str m9)), tpair (tpair (smatmul2 m7 (str m2), smatmul2 m7 (sconcrete (sfromListLinear [1,1] [0.0]))), ssum @1 (str m7))), tpair (smatmul2 (sfromR m6) (str m4), ssum @1 (str (sfromR m6)))))"
  printArtifactPrimalPretty renames (simplifyArtifact artifactRev)
    @?= "\\m1 -> rfromS (smatmul2 (sfromR (tproject1 (tproject2 m1))) (tanh ((smatmul2 (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1))))) (tanh ((smatmul2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1))))) (sreplicate @1 (sreplicate @1 (sscalar 7.0))) + smatmul2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1))))) (sconcrete (sfromListLinear [1,1] [0.0]))) + str (sreplicate @1 (sfromR (tproject2 (tproject1 (tproject1 m1))))))) + smatmul2 (sfromR (tproject2 (tproject1 (tproject2 (tproject1 m1))))) (sconcrete (sfromListLinear [1,1] [0.0]))) + str (sreplicate @1 (sfromR (tproject2 (tproject2 (tproject1 m1))))))) + str (sreplicate @1 (sfromR (tproject2 (tproject2 m1)))))"

testRNNOPP2 :: Assertion
testRNNOPP2 = do
  resetVarCounter
  let renames = IM.empty
      batch_size = 2
      sizeMnistHeightI = 2
      blackGlyph :: AstTensor AstMethodLet PrimalSpan (TKR 3 Double)
      blackGlyph = AstReplicate (SNat @2) knownSTK
                   $ AstReplicate (SNat @2) knownSTK
                   $ AstReplicate (SNat @2) knownSTK
                       (rconcrete $ Nested.rscalar 7
                        :: AstTensor AstMethodLet PrimalSpan (TKR 0 Double))
      afcnn2T :: ADRnnMnistParameters (AstTensor AstMethodLet FullSpan)
                                                      Double
              -> AstTensor AstMethodLet FullSpan (TKR 2 Double)
      afcnn2T = MnistRnnRanked2.rnnMnistZeroR batch_size blackGlyph
      ftk = tftk @RepN (knownSTK @(X (ADRnnMnistParameters RepN Double)))
                       (toTarget @RepN $ valsInitRNNOPP 2 sizeMnistHeightI)
      (artifactRev, _) = revArtifactAdapt True afcnn2T ftk
  printArtifactPretty renames artifactRev
    @?= "\\m16 m1 -> let m3 = tanh ((ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @2 (sreplicate @2 (sreplicate @2 (sscalar 7.0))))) + ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @2 (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))))) + str (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; m4 = tanh ((ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @2 (sreplicate @2 (sreplicate @2 (sscalar 7.0))))) + ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @2 (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))))) + str (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; t5 = str (sreplicate @2 m4) ; m6 = tanh ((ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1)))))) * t5) + ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject2 (tproject1 m1)))))) * str (sreplicate @2 (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))))) + str (sreplicate @2 (sfromR (tproject2 (tproject2 (tproject1 m1)))))) ; m7 = sappend m3 m6 ; t8 = str (sreplicate @2 (sslice m7)) ; m9 = tanh ((ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @2 (sreplicate @2 (sreplicate @2 (sscalar 7.0))))) + ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1)))))) * t8)) + str (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; t10 = str (sreplicate @2 (sslice m7)) ; m11 = tanh ((ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @2 (sreplicate @2 (sreplicate @2 (sscalar 7.0))))) + ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1)))))) * t10)) + str (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; t12 = str (sreplicate @2 m11) ; t13 = str (sreplicate @2 (sslice m7)) ; m14 = tanh ((ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1)))))) * t12) + ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject2 (tproject1 m1)))))) * t13)) + str (sreplicate @2 (sfromR (tproject2 (tproject2 (tproject1 m1)))))) ; t15 = str (sreplicate @10 (sslice (sappend m9 m14))) ; m17 = sappend (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0])) (sappend (ssum @10 (str (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject2 m1)))) * sreplicate @2 (sfromR m16)))) (sconcrete (sfromListLinear [0,2] []))) ; m18 = (sconcrete (sfromListLinear [2,2] [1.0,1.0,1.0,1.0]) + negate m14 * m14) * sslice m17 ; t19 = sreplicate @2 m18 ; t20 = sreplicate @2 m18 ; m21 = (sconcrete (sfromListLinear [2,2] [1.0,1.0,1.0,1.0]) + negate m11 * m11) * ssum @2 (str (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1)))))) * t20)) ; t22 = sreplicate @2 m21 ; m23 = (sconcrete (sfromListLinear [2,2] [1.0,1.0,1.0,1.0]) + negate m9 * m9) * sslice m17 ; t24 = sreplicate @2 m23 ; m25 = sappend (sconcrete (sfromListLinear [0,2] [])) (sappend (ssum @2 (str (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1)))))) * t24))) (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))) + (sappend (sconcrete (sfromListLinear [0,2] [])) (sappend (ssum @2 (str (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1)))))) * t22))) (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))) + sappend (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0])) (sappend (ssum @2 (str (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject2 (tproject1 m1)))))) * t19))) (sconcrete (sfromListLinear [0,2] [])))) ; m26 = (sconcrete (sfromListLinear [2,2] [1.0,1.0,1.0,1.0]) + negate m6 * m6) * sslice m25 ; t27 = sreplicate @2 m26 ; m28 = (sconcrete (sfromListLinear [2,2] [1.0,1.0,1.0,1.0]) + negate m4 * m4) * ssum @2 (str (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1)))))) * t27)) ; m29 = (sconcrete (sfromListLinear [2,2] [1.0,1.0,1.0,1.0]) + negate m3 * m3) * sslice m25 in tpair (tpair (tpair (tpair (rfromS (ssum @2 (stranspose @[2,1,0] (str (sreplicate @2 (sreplicate @2 (sreplicate @2 (sscalar 7.0)))) * sreplicate @2 m29)) + (ssum @2 (stranspose @[2,1,0] (str (sreplicate @2 (sreplicate @2 (sreplicate @2 (sscalar 7.0)))) * sreplicate @2 m28)) + (ssum @2 (stranspose @[2,1,0] (str (sreplicate @2 (sreplicate @2 (sreplicate @2 (sscalar 7.0)))) * sreplicate @2 m23)) + ssum @2 (stranspose @[2,1,0] (str (sreplicate @2 (sreplicate @2 (sreplicate @2 (sscalar 7.0)))) * sreplicate @2 m21))))), rfromS (ssum @2 (stranspose @[2,1,0] (str (sreplicate @2 (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))) * sreplicate @2 m29)) + (ssum @2 (stranspose @[2,1,0] (str (sreplicate @2 (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))) * sreplicate @2 m28)) + (ssum @2 (stranspose @[2,1,0] (t8 * t24)) + ssum @2 (stranspose @[2,1,0] (t10 * t22)))))), rfromS (ssum @2 (str m29) + (ssum @2 (str m28) + (ssum @2 (str m23) + ssum @2 (str m21))))), tpair (tpair (rfromS (ssum @2 (stranspose @[2,1,0] (t5 * t27)) + ssum @2 (stranspose @[2,1,0] (t12 * t20))), rfromS (ssum @2 (stranspose @[2,1,0] (str (sreplicate @2 (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))) * sreplicate @2 m26)) + ssum @2 (stranspose @[2,1,0] (t13 * t19)))), rfromS (ssum @2 (str m26) + ssum @2 (str m18)))), tpair (rfromS (ssum @2 (stranspose @[2,1,0] (t15 * sreplicate @2 (sfromR m16)))), rfromS (ssum @2 (str (sfromR m16)))))"
  printArtifactPrimalPretty renames artifactRev
    @?= "\\m1 -> let m3 = tanh ((ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @2 (sreplicate @2 (sreplicate @2 (sscalar 7.0))))) + ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @2 (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))))) + str (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; m4 = tanh ((ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @2 (sreplicate @2 (sreplicate @2 (sscalar 7.0))))) + ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @2 (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))))) + str (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; t5 = str (sreplicate @2 m4) ; m6 = tanh ((ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1)))))) * t5) + ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject2 (tproject1 m1)))))) * str (sreplicate @2 (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))))) + str (sreplicate @2 (sfromR (tproject2 (tproject2 (tproject1 m1)))))) ; m7 = sappend m3 m6 ; t8 = str (sreplicate @2 (sslice m7)) ; m9 = tanh ((ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @2 (sreplicate @2 (sreplicate @2 (sscalar 7.0))))) + ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1)))))) * t8)) + str (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; t10 = str (sreplicate @2 (sslice m7)) ; m11 = tanh ((ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1)))))) * str (sreplicate @2 (sreplicate @2 (sreplicate @2 (sscalar 7.0))))) + ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1)))))) * t10)) + str (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; t12 = str (sreplicate @2 m11) ; t13 = str (sreplicate @2 (sslice m7)) ; m14 = tanh ((ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1)))))) * t12) + ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject2 (tproject1 m1)))))) * t13)) + str (sreplicate @2 (sfromR (tproject2 (tproject2 (tproject1 m1)))))) ; t15 = str (sreplicate @10 (sslice (sappend m9 m14))) in rfromS (ssum @2 (stranspose @[2,1,0] (sreplicate @2 (sfromR (tproject1 (tproject2 m1)))) * t15) + str (sreplicate @2 (sfromR (tproject2 (tproject2 m1)))))"
  printArtifactPretty renames (simplifyArtifact artifactRev)
    @?= "\\m16 m1 -> tfromS (let m3 = tanh ((smatmul2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1))))) (sreplicate @2 (sreplicate @2 (sscalar 7.0))) + smatmul2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1))))) (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))) + str (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; m4 = tanh ((smatmul2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1))))) (sreplicate @2 (sreplicate @2 (sscalar 7.0))) + smatmul2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1))))) (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))) + str (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; m6 = tanh ((smatmul2 (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1))))) m4 + smatmul2 (sfromR (tproject2 (tproject1 (tproject2 (tproject1 m1))))) (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))) + str (sreplicate @2 (sfromR (tproject2 (tproject2 (tproject1 m1)))))) ; m7 = sappend m3 m6 ; m9 = tanh ((smatmul2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1))))) (sreplicate @2 (sreplicate @2 (sscalar 7.0))) + smatmul2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1))))) (sslice m7)) + str (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; m11 = tanh ((smatmul2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1))))) (sreplicate @2 (sreplicate @2 (sscalar 7.0))) + smatmul2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1))))) (sslice m7)) + str (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 m1)))))) ; m14 = tanh ((smatmul2 (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1))))) m11 + smatmul2 (sfromR (tproject2 (tproject1 (tproject2 (tproject1 m1))))) (sslice m7)) + str (sreplicate @2 (sfromR (tproject2 (tproject2 (tproject1 m1)))))) ; m17 = sappend (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0])) (sappend (smatmul2 (str (sfromR (tproject1 (tproject2 m1)))) (sfromR m16)) (sconcrete (sfromListLinear [0,2] []))) ; m18 = (sconcrete (sfromListLinear [2,2] [1.0,1.0,1.0,1.0]) + negate m14 * m14) * sslice m17 ; m21 = (sconcrete (sfromListLinear [2,2] [1.0,1.0,1.0,1.0]) + negate m11 * m11) * smatmul2 (str (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1)))))) m18 ; m23 = (sconcrete (sfromListLinear [2,2] [1.0,1.0,1.0,1.0]) + negate m9 * m9) * sslice m17 ; m25 = sappend (sconcrete (sfromListLinear [0,2] [])) (sappend (smatmul2 (str (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1)))))) m23) (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))) + (sappend (sconcrete (sfromListLinear [0,2] [])) (sappend (smatmul2 (str (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1)))))) m21) (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))) + sappend (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0])) (sappend (smatmul2 (str (sfromR (tproject2 (tproject1 (tproject2 (tproject1 m1)))))) m18) (sconcrete (sfromListLinear [0,2] [])))) ; m26 = (sconcrete (sfromListLinear [2,2] [1.0,1.0,1.0,1.0]) + negate m6 * m6) * sslice m25 ; m28 = (sconcrete (sfromListLinear [2,2] [1.0,1.0,1.0,1.0]) + negate m4 * m4) * smatmul2 (str (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1)))))) m26 ; m29 = (sconcrete (sfromListLinear [2,2] [1.0,1.0,1.0,1.0]) + negate m3 * m3) * sslice m25 in tpair (tpair (tpair (tpair (smatmul2 m29 (str (sreplicate @2 (sreplicate @2 (sscalar 7.0)))) + (smatmul2 m28 (str (sreplicate @2 (sreplicate @2 (sscalar 7.0)))) + (smatmul2 m23 (str (sreplicate @2 (sreplicate @2 (sscalar 7.0)))) + smatmul2 m21 (str (sreplicate @2 (sreplicate @2 (sscalar 7.0)))))), smatmul2 m29 (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0])) + (smatmul2 m28 (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0])) + (smatmul2 m23 (str (sslice m7)) + smatmul2 m21 (str (sslice m7))))), ssum @2 (str m29) + (ssum @2 (str m28) + (ssum @2 (str m23) + ssum @2 (str m21)))), tpair (tpair (smatmul2 m26 (str m4) + smatmul2 m18 (str m11), smatmul2 m26 (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0])) + smatmul2 m18 (str (sslice m7))), ssum @2 (str m26) + ssum @2 (str m18))), tpair (smatmul2 (sfromR m16) (str m14), ssum @2 (str (sfromR m16)))))"
  printArtifactPrimalPretty renames (simplifyArtifact artifactRev)
    @?= "\\m1 -> rfromS (let m7 = sappend (tanh ((smatmul2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1))))) (sreplicate @2 (sreplicate @2 (sscalar 7.0))) + smatmul2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1))))) (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))) + str (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 m1))))))) (tanh ((smatmul2 (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1))))) (tanh ((smatmul2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1))))) (sreplicate @2 (sreplicate @2 (sscalar 7.0))) + smatmul2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1))))) (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))) + str (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 m1))))))) + smatmul2 (sfromR (tproject2 (tproject1 (tproject2 (tproject1 m1))))) (sconcrete (sfromListLinear [2,2] [0.0,0.0,0.0,0.0]))) + str (sreplicate @2 (sfromR (tproject2 (tproject2 (tproject1 m1))))))) in smatmul2 (sfromR (tproject1 (tproject2 m1))) (tanh ((smatmul2 (sfromR (tproject1 (tproject1 (tproject2 (tproject1 m1))))) (tanh ((smatmul2 (sfromR (tproject1 (tproject1 (tproject1 (tproject1 m1))))) (sreplicate @2 (sreplicate @2 (sscalar 7.0))) + smatmul2 (sfromR (tproject2 (tproject1 (tproject1 (tproject1 m1))))) (sslice m7)) + str (sreplicate @2 (sfromR (tproject2 (tproject1 (tproject1 m1))))))) + smatmul2 (sfromR (tproject2 (tproject1 (tproject2 (tproject1 m1))))) (sslice m7)) + str (sreplicate @2 (sfromR (tproject2 (tproject2 (tproject1 m1))))))) + str (sreplicate @2 (sfromR (tproject2 (tproject2 m1)))))"
