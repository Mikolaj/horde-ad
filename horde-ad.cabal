cabal-version:      2.4
-- The cabal-version field refers to the version of the .cabal specification,
-- and can be different from the cabal-install (the tool) version and the
-- Cabal (the library) version you are using. As such, the Cabal (the library)
-- version used must be equal or greater than the version stated in this field.
-- Starting from the specification version 2.2, the cabal-version field must be
-- the first thing in the cabal file.

-- Initial package description 'horde-ad' generated by
-- 'cabal init'. For further documentation, see:
--   http://haskell.org/cabal/users-guide/
--
-- The name of the package.
name:               horde-ad

-- The package version.
-- See the Haskell package versioning policy (PVP) for standards
-- guiding when and how versions should be incremented.
-- https://pvp.haskell.org
-- PVP summary:     +-+------- breaking API changes
--                  | | +----- non-breaking API additions
--                  | | | +--- code changes with no API change
version:            0.1.0.0

-- A short (one-line) description of the package.
synopsis:           Higher Order Reverse Derivatives Efficiently - Automatic Differentiation

-- A longer description of the package.
description:        An Automatic Differentiation library based on the paper "Provably correct, asymptotically efficient, higher-order reverse-mode automatic differentiation" by Faustyna Krawiec, Neel Krishnaswami, Simon Peyton Jones, Tom Ellis, Andrew Fitzgibbon and Richard Eisenberg.

-- The license under which the package is released.
license:            BSD-3-Clause

-- The file containing the license text.
license-file:       LICENSE

-- The package author(s).
author:             Mikolaj Konarski and others

-- An email address to which users can send suggestions, bug reports, and patches.
maintainer:         mikolaj.konarski@funktory.com

category:           Machine Learning, Automatic Differentiation

-- A copyright notice.
-- copyright:
build-type:         Simple

-- Extra doc files to be distributed with the package, such as a CHANGELOG or a README.
extra-doc-files:    README.md,
                    CHANGELOG.md

-- Extra source files to be distributed with the package, such as examples, or a tutorial module.
-- extra-source-files:

tested-with:        GHC ==9.2.7 || ==9.4.4

bug-reports:        https://github.com/Mikolaj/horde-ad/issues

source-repository head
  type:               git
  location:           git://github.com/Mikolaj/horde-ad.git

flag with_expensive_assertions
  description:        turn on expensive assertions of well-tested code
  default:            False
  manual:             True

flag release
  description:        remember to set before tagging for a release (to expose internal functions and types, disable tests that depend on not packaged data, etc.)
  default:            False
  manual:             True

flag use_typelits_plugins
  description:        use typelits plugins, without which a lot of functionality needs to be disabled
  default:            True
  manual:             False

common options
  default-language:   GHC2021
  default-extensions: StrictData, GADTs, TypeFamilies,
                      TypeFamilyDependencies, FunctionalDependencies,
                      RecordWildCards, MultiWayIf, LambdaCase,
                      DefaultSignatures, PatternSynonyms, NoStarIsType,
                      DataKinds
  other-extensions:   UnboxedTuples, CPP, ViewPatterns, OverloadedLists,
                      DerivingStrategies, DeriveAnyClass,
                      UndecidableInstances, AllowAmbiguousTypes
  ghc-options:        -Wall -Wcompat -Worphans -Wincomplete-uni-patterns -Wincomplete-record-updates -Wimplicit-prelude -Wmissing-home-modules -Widentities -Wredundant-constraints -Wmissing-export-lists -Wpartial-fields -Wunused-packages
  if impl(ghc >= 9.4)
    ghc-options:        -Wredundant-strictness-flags
  ghc-options:        -fno-ignore-asserts

  -- Disabling this breaks performance:
  ghc-options:        -fexpose-all-unfoldings -fspecialise-aggressively -fsimpl-tick-factor=200

-- ghc-options: -fworker-wrapper-cbv  -- 10% speed up, but supposedly risky
-- TODO: benchmark on big examples and include if speed up is much higher

  ghc-options:        -Wmissed-specialisations

  if flag(with_expensive_assertions)
    cpp-options:      -DWITH_EXPENSIVE_ASSERTIONS

  if flag(release)
    cpp-options:      -DEXPOSE_INTERNAL

common exe-options
  ghc-options:        -rtsopts
  -- Make GC more predictable in benchmarks.
  ghc-options:        "-with-rtsopts=-H1.5g -A0.75g -I0"

common exe-options-test
  ghc-options:        -rtsopts -threaded

-- Not buildable in release mode, because this is educational version
-- of the code, not a part of the real library API.
library horde-ad-simplified
    import:           options

    if flag(release)
      buildable: False
    else
      buildable: True

    exposed-modules:  HordeAd
                      HordeAd.Core.ADValTensor
                      HordeAd.Core.Ast
                      HordeAd.Core.AstSimplify
                      HordeAd.Core.AstVectorize
                      HordeAd.Core.Delta
                      HordeAd.Core.DualClass
                      HordeAd.Core.DualNumber
                      HordeAd.Core.Engine
                      HordeAd.Core.PairOfVectors
                      HordeAd.Core.SizedIndex
                      HordeAd.Core.TensorClass
                      HordeAd.External.Adaptor
                      HordeAd.External.Optimizer
                      HordeAd.External.OptimizerTools
                      HordeAd.Internal.OrthotopeOrphanInstances
                      HordeAd.Internal.SizedList
                      HordeAd.Internal.TensorOps

    build-depends:
        assert-failure
      , base >= 4.14 && < 99
      , Boolean
      , deepseq
      , enummapset
      , ghc-typelits-knownnat
      , ghc-typelits-natnormalise
      , hmatrix
      , ilist
      , mono-traversable
      , orthotope
      , pretty-show
      , random
      , strict-containers
      , unboxed-ref
      , vector

    hs-source-dirs:   simplified src/common

library testCommonLibrarySimplified
    import:           options

    if flag(release)
      buildable: False
    else
      buildable: True

    exposed-modules:  Tool.Shared
                      Tool.EqEpsilon

    build-depends:
      , horde-ad-simplified

      , base
      , hmatrix
      , ilist
      , orthotope
      , random
      , storable-tuple
      , strict-containers
      , tasty >= 1.0
      , tasty-hunit
      , tasty-quickcheck
      , vector

    hs-source-dirs:   test/common

test-suite simplifiedOnlyTest
    import:           options, exe-options-test

    if flag(release)
      buildable: False
    else
      buildable: True

    type:             exitcode-stdio-1.0

    hs-source-dirs:   test
                      test/simplified

    main-is:          SimplifiedOnlyTest.hs

    other-modules:    TestAdaptorSimplified
                      TestHighRankSimplified

    build-depends:
      , horde-ad-simplified
      , testCommonLibrarySimplified

      , base
      , Boolean
      , ghc-typelits-knownnat
      , ghc-typelits-natnormalise
      , hmatrix
      , orthotope
      , strict-containers
      , tasty >= 1.0
      , tasty-hunit
      , vector
